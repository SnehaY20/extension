(()=>{pdfjsLib.GlobalWorkerOptions.workerSrc=chrome.runtime.getURL("lib/pdf.worker.min.js");const e=document.getElementById("dropZone"),t=document.getElementById("fileInput"),n=document.getElementById("loading"),a=document.getElementById("error"),o=document.getElementById("previewContainer"),r=document.getElementById("previewImages"),s=document.getElementById("downloadBtn"),c=document.querySelectorAll(".format-option"),i=document.getElementById("quality"),d=document.getElementById("pageRange");let l="png",m=1,g=[],v=[],u=null;async function f(e){if(e.size>10485760)return void E("File size must be less than 10MB");u=e,n.classList.add("active"),a.classList.remove("active"),o.classList.remove("active");const t=new FileReader;t.onload=async function(e){try{const t=new Uint8Array(e.target.result),n=await pdfjsLib.getDocument(t).promise;r.innerHTML="",v=[],g=[];const a=n.numPages,o="all"===d.value?Array.from({length:a},((e,t)=>t+1)):[1];for(const e of o){const t=await n.getPage(e),a=t.getViewport({scale:1.5}),o=document.createElement("canvas"),r=o.getContext("2d");o.height=a.height,o.width=a.width,await t.render({canvasContext:r,viewport:a}).promise,v.push(o)}p(),h()}catch(e){console.error("Conversion error:",e),E("Error converting PDF: "+e.message),h()}},t.onerror=function(){console.error("FileReader error",t.error),E("Error reading file"),h()},t.readAsArrayBuffer(e)}function p(){0!==v.length?(g=[],r.innerHTML="",v.forEach(((e,t)=>{const n=document.createElement("canvas"),a=n.getContext("2d");n.width=e.width,n.height=e.height,a.drawImage(e,0,0);let o="png"===l?void 0:m;const s=n.toDataURL(`image/${l}`,o);g.push(s);const c=document.createElement("img");c.src=s,c.className="preview-image",c.alt=`Page ${t+1}`,r.appendChild(c)})),o.classList.add("active")):console.warn("No canvases available for updateImages")}function h(){n.classList.remove("active")}function E(e){a.textContent=e,a.classList.add("active"),n.classList.remove("active"),o.classList.remove("active")}e.addEventListener("click",(()=>{t?t.click():console.error("File input element not found!")})),t.addEventListener("change",(function(e){const t=e.target.files[0];t?f(t):console.log("No file selected via input")})),e.addEventListener("dragover",(t=>{t.preventDefault(),e.classList.add("dragover")})),e.addEventListener("dragleave",(()=>{e.classList.remove("dragover")})),e.addEventListener("drop",(t=>{t.preventDefault(),e.classList.remove("dragover");const n=t.dataTransfer.files[0];n&&"application/pdf"===n.type?f(n):E("Please select a valid PDF file")})),c.forEach((e=>{e.addEventListener("click",(()=>{c.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),l=e.dataset.format,p()}))})),i.addEventListener("change",(e=>{m=parseFloat(e.target.value),p()})),d.addEventListener("change",(()=>{u&&f(u)})),s.addEventListener("click",(()=>{if(g.length>0){const e=u.name.replace(/\.pdf$/i,"");if(1===g.length){const t=document.createElement("a");t.download=`${e}.${l}`,t.href=g[0],t.click()}else g.forEach(((t,n)=>{const a=document.createElement("a");a.download=`${e}_page${n+1}.${l}`,a.href=t,a.click()}));const t=document.createElement("div");t.className="success",t.textContent="Download started!",document.body.appendChild(t),setTimeout((()=>t.remove()),3e3)}else console.warn("No images to download")}))})();